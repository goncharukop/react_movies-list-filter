{"version":3,"sources":["components/Search/Search.jsx","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["Search","query","moviesFilter","className","htmlFor","type","id","value","placeholder","onChange","event","target","MovieCard","title","description","imgUrl","imdbUrl","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","App","state","moviesList","moviesFromServer","filterWord","toLowerCase","setState","filter","includes","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACpB,yBAAKC,UAAU,SACb,2BAAOC,QAAQ,eAAeD,UAAU,SAAxC,gBAGA,yBAAKA,UAAU,WACb,2BACEE,KAAK,OACLC,GAAG,eACHC,MAAON,EACPE,UAAU,QACVK,YAAY,mBACZC,SAAU,SAAAC,GAAK,OACbR,EAAaQ,EAAMC,OAAOJ,cCZvBK,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKb,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEc,IAAKF,EACLG,IAAI,gBAIV,yBAAKf,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEc,IAAI,wBACJC,IAAI,WAIV,yBAAKf,UAAU,iBACb,uBAAGA,UAAU,cAAcU,KAI/B,yBAAKV,UAAU,WACZW,EACD,6BACA,uBAAGK,KAAMH,GAAT,aAaRJ,EAAUQ,aAAe,CACvBN,YAAa,ICxCR,IAAMO,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKnB,UAAU,UACZmB,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCnBGK,EAAb,4MACEC,MAAQ,CACN3B,MAAO,GACP4B,WAAYC,GAHhB,EAME5B,aAAe,SAACD,GACd,IAAM8B,EAAa9B,EAAM+B,cAEzB,EAAKC,SAAS,CACZhC,QACA4B,WAAYC,EAAiBI,QAAO,SAAAV,GAAK,OACvCA,EAAMX,MAAMmB,cAAcG,SAASJ,IAChCP,EAAMV,YAAYkB,cAAcG,SAASJ,SAbpD,uDAkBY,IAAD,EACuBK,KAAKR,MAA3B3B,EADD,EACCA,MAAO4B,EADR,EACQA,WAEf,OACE,yBAAK1B,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACEF,MAAOA,EACPC,aAAckC,KAAKlC,iBAKzB,kBAAC,EAAD,CAAYoB,OAAQO,KAEtB,yBAAK1B,UAAU,WAAf,0BAnCR,GAAyBkC,aCFzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.25f3c02f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Search = ({ query, moviesFilter }) => (\n  <div className=\"field\">\n    <label htmlFor=\"search-query\" className=\"label\">\n      Search movie\n    </label>\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        id=\"search-query\"\n        value={query}\n        className=\"input\"\n        placeholder=\"Type search word\"\n        onChange={event => (\n          moviesFilter(event.target.value)\n        )}\n      />\n    </div>\n  </div>\n);\n\nSearch.propTypes = {\n  query: PropTypes.string.isRequired,\n  moviesFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Search } from './components/Search';\nimport { MoviesList } from './components/MoviesList';\n\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n    moviesList: moviesFromServer,\n  };\n\n  moviesFilter = (query) => {\n    const filterWord = query.toLowerCase();\n\n    this.setState({\n      query,\n      moviesList: moviesFromServer.filter(movie => (\n        movie.title.toLowerCase().includes(filterWord)\n        || movie.description.toLowerCase().includes(filterWord)\n      )),\n    });\n  }\n\n  render() {\n    const { query, moviesList } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <Search\n                query={query}\n                moviesFilter={this.moviesFilter}\n              />\n            </div>\n          </div>\n\n          <MoviesList movies={moviesList} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}